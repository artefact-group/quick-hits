files:
  "/etc/init/sidekiq_worker.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      description "Sidekiq Upstart Manager"

      start on runlevel [2345]
      stop on runlevel [!2345]

      respawn
      respawn limit 3 30

      script
      exec /bin/bash <<"EOF"
        EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
        EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)
        EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)

        . $EB_SUPPORT_DIR/envvars
        . $EB_SCRIPT_DIR/use-app-ruby.sh

        cd $EB_APP_DEPLOY_DIR

        exec su -s /bin/bash -c "bundle exec sidekiq -e $RACK_ENV -q activity -q default" webapp
      EOF
      end script

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/05_quiet_sidekiq.sh":
    mode: "000755"
    content: |
      #==============================================================================
      # This job will send a USR1 signal to the sidekiq worker process, which tells
      # sidekiq worker to stop accepting new jobs but to keep working on what it is already
      # working on.  Once deploy is finished, then we will restart the workers
      #==============================================================================
      EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
      EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)
      EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)

      . $EB_SUPPORT_DIR/envvars
      . $EB_SCRIPT_DIR/use-app-ruby.sh
      SIDEKIQ_PID=`cat $EB_APP_DEPLOY_DIR/tmp/sidekiq.pid`
      if [ "$SIDEKIQ_PID" == "" ]
      then
        exit 0
      else
        /bin/kill -USR1 $SIDEKIQ_PID
      fi

  "/opt/elasticbeanstalk/hooks/appdeploy/post/02_restart_sidekiq.sh":
    mode: "000755"
    content: |

      initctl restart sidekiq_worker || initctl start sidekiq_worker
